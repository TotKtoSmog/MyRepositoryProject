### YamlMime:ManagedReference
items:
- uid: MyRepositoryProject.Car
  commentId: T:MyRepositoryProject.Car
  id: Car
  parent: MyRepositoryProject
  children:
  - MyRepositoryProject.Car.#ctor
  - MyRepositoryProject.Car.#ctor(System.String,System.Double)
  - MyRepositoryProject.Car.CarName
  - MyRepositoryProject.Car.CarPrice
  - MyRepositoryProject.Car.IsEmpty
  langs:
  - csharp
  - vb
  name: Car
  nameWithType: Car
  fullName: MyRepositoryProject.Car
  type: Class
  source:
    remote:
      path: MyRepositoryProject/Car.cs
      branch: release
      repo: https://github.com/TotKtoSmog/MyRepositoryProject.git
    id: Car
    path: MyRepositoryProject/Car.cs
    startLine: 2
  assemblies:
  - MyRepositoryProject
  namespace: MyRepositoryProject
  syntax:
    content: public class Car
    content.vb: Public Class Car
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyRepositoryProject.Car.CarName
  commentId: P:MyRepositoryProject.Car.CarName
  id: CarName
  parent: MyRepositoryProject.Car
  langs:
  - csharp
  - vb
  name: CarName
  nameWithType: Car.CarName
  fullName: MyRepositoryProject.Car.CarName
  type: Property
  source:
    remote:
      path: MyRepositoryProject/Car.cs
      branch: release
      repo: https://github.com/TotKtoSmog/MyRepositoryProject.git
    id: CarName
    path: MyRepositoryProject/Car.cs
    startLine: 4
  assemblies:
  - MyRepositoryProject
  namespace: MyRepositoryProject
  syntax:
    content: public string? CarName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CarName As String
  overload: MyRepositoryProject.Car.CarName*
- uid: MyRepositoryProject.Car.CarPrice
  commentId: P:MyRepositoryProject.Car.CarPrice
  id: CarPrice
  parent: MyRepositoryProject.Car
  langs:
  - csharp
  - vb
  name: CarPrice
  nameWithType: Car.CarPrice
  fullName: MyRepositoryProject.Car.CarPrice
  type: Property
  source:
    remote:
      path: MyRepositoryProject/Car.cs
      branch: release
      repo: https://github.com/TotKtoSmog/MyRepositoryProject.git
    id: CarPrice
    path: MyRepositoryProject/Car.cs
    startLine: 10
  assemblies:
  - MyRepositoryProject
  namespace: MyRepositoryProject
  syntax:
    content: public double CarPrice { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property CarPrice As Double
  overload: MyRepositoryProject.Car.CarPrice*
- uid: MyRepositoryProject.Car.#ctor
  commentId: M:MyRepositoryProject.Car.#ctor
  id: '#ctor'
  parent: MyRepositoryProject.Car
  langs:
  - csharp
  - vb
  name: Car()
  nameWithType: Car.Car()
  fullName: MyRepositoryProject.Car.Car()
  type: Constructor
  source:
    remote:
      path: MyRepositoryProject/Car.cs
      branch: release
      repo: https://github.com/TotKtoSmog/MyRepositoryProject.git
    id: .ctor
    path: MyRepositoryProject/Car.cs
    startLine: 16
  assemblies:
  - MyRepositoryProject
  namespace: MyRepositoryProject
  syntax:
    content: public Car()
    content.vb: Public Sub New()
  overload: MyRepositoryProject.Car.#ctor*
  nameWithType.vb: Car.New()
  fullName.vb: MyRepositoryProject.Car.New()
  name.vb: New()
- uid: MyRepositoryProject.Car.#ctor(System.String,System.Double)
  commentId: M:MyRepositoryProject.Car.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: MyRepositoryProject.Car
  langs:
  - csharp
  - vb
  name: Car(string, double)
  nameWithType: Car.Car(string, double)
  fullName: MyRepositoryProject.Car.Car(string, double)
  type: Constructor
  source:
    remote:
      path: MyRepositoryProject/Car.cs
      branch: release
      repo: https://github.com/TotKtoSmog/MyRepositoryProject.git
    id: .ctor
    path: MyRepositoryProject/Car.cs
    startLine: 21
  assemblies:
  - MyRepositoryProject
  namespace: MyRepositoryProject
  syntax:
    content: public Car(string carName, double carPrice)
    parameters:
    - id: carName
      type: System.String
    - id: carPrice
      type: System.Double
    content.vb: Public Sub New(carName As String, carPrice As Double)
  overload: MyRepositoryProject.Car.#ctor*
  nameWithType.vb: Car.New(String, Double)
  fullName.vb: MyRepositoryProject.Car.New(String, Double)
  name.vb: New(String, Double)
- uid: MyRepositoryProject.Car.IsEmpty
  commentId: M:MyRepositoryProject.Car.IsEmpty
  id: IsEmpty
  parent: MyRepositoryProject.Car
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: Car.IsEmpty()
  fullName: MyRepositoryProject.Car.IsEmpty()
  type: Method
  source:
    remote:
      path: MyRepositoryProject/Car.cs
      branch: release
      repo: https://github.com/TotKtoSmog/MyRepositoryProject.git
    id: IsEmpty
    path: MyRepositoryProject/Car.cs
    startLine: 27
  assemblies:
  - MyRepositoryProject
  namespace: MyRepositoryProject
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty() As Boolean
  overload: MyRepositoryProject.Car.IsEmpty*
references:
- uid: MyRepositoryProject
  commentId: N:MyRepositoryProject
  href: MyRepositoryProject.html
  name: MyRepositoryProject
  nameWithType: MyRepositoryProject
  fullName: MyRepositoryProject
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyRepositoryProject.Car.CarName*
  commentId: Overload:MyRepositoryProject.Car.CarName
  href: MyRepositoryProject.Car.html#MyRepositoryProject_Car_CarName
  name: CarName
  nameWithType: Car.CarName
  fullName: MyRepositoryProject.Car.CarName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyRepositoryProject.Car.CarPrice*
  commentId: Overload:MyRepositoryProject.Car.CarPrice
  href: MyRepositoryProject.Car.html#MyRepositoryProject_Car_CarPrice
  name: CarPrice
  nameWithType: Car.CarPrice
  fullName: MyRepositoryProject.Car.CarPrice
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: MyRepositoryProject.Car.#ctor*
  commentId: Overload:MyRepositoryProject.Car.#ctor
  href: MyRepositoryProject.Car.html#MyRepositoryProject_Car__ctor
  name: Car
  nameWithType: Car.Car
  fullName: MyRepositoryProject.Car.Car
  nameWithType.vb: Car.New
  fullName.vb: MyRepositoryProject.Car.New
  name.vb: New
- uid: MyRepositoryProject.Car.IsEmpty*
  commentId: Overload:MyRepositoryProject.Car.IsEmpty
  href: MyRepositoryProject.Car.html#MyRepositoryProject_Car_IsEmpty
  name: IsEmpty
  nameWithType: Car.IsEmpty
  fullName: MyRepositoryProject.Car.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
