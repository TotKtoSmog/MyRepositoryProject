name: .NET CI

on:
  push:
    branches: [ "development", "master", "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore 
      
    - name: Build the project
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore
      
    - name: Run unit tests
      run: dotnet test MyRepositoryProject.Tests/MyRepositoryProject.Tests.csproj --configuration ${{ matrix.configuration }} --no-restore --logger trx --collect:"XPlat Code Coverage"

    - name: Publish test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.configuration }}
        path: '**/TestResults/*.trx'
        
  create_pr:
      needs: build
      if: github.ref == 'refs/heads/development'
      runs-on: windows-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Create Pull Request
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            gh pr create --base master --head development --title "Merge development into master" --body "Automated PR from development to master"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  auto_merge:
    needs: [build, create_pr]
    if: github.ref == 'refs/heads/development'
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Auto Merge PR
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin master
          git checkout master
          git merge development || echo "Merge conflict detected, please resolve manually."
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
